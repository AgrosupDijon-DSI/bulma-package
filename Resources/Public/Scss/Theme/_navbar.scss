$navbar-item-weight: $weight-semibold !default;
$navbar-item-size: $body-font-size !default;
$navbar-item-text-decoration-hover: none !default;
$navbar-item-text-decoration-active: none !default;
$navbar-dropdown-box-shadow: 0 8px 8px bulmaRgba($scheme-invert, 0.1) !default;
$navbar-dropdown-border-bottom: 0 !default;
$navbar-dropdown-border-top-color: $primary !default;
$navbar-dropdown-item-color: $navbar-item-color !default;
$navbar-dropdown-item-text-decoration-hover: none !default;
$navbar-dropdown-item-text-decoration-active: none !default;
$navbar-height-touch: $navbar-height !default;
//$navbar-with-background-item-hover-background-color;
//$navbar-with-background-item-active-background-color
//$navbar-with-background-item-hover-color;
//$navbar-with-background-item-active-color;
//$navbar-with-background-dropdown-arrow;

.navbar-item {
  &:empty {
    padding: 0;
  }
}

.navbar-burger {
  align-self: center;
}

.navbar-start, .navbar-end {
  & > a, & > .navbar-item > a {
    font-weight: $navbar-item-weight;
    font-size: $navbar-item-size;
  }
}

.nested.has-dropdown {
  padding: 0;

  & > .navbar-link {
    width: 100%;

    &:not(.is-arrowless) {
      padding-right: 2.5em;
    }
  }
}

@include until($navbar-breakpoint) {
  .navbar{
    min-height: $navbar-height-touch;
    & > .container {
      min-height: $navbar-height-touch;
    }
  }
  .navbar-menu {
    display: block;
    position: absolute;
    width: 100%;
    border-top: $navbar-dropdown-border-top;
    border-color: $primary;
    box-shadow: none;
    padding: 0;
    border-bottom: $navbar-dropdown-border-bottom;
    right: 100%;
    transition: 0.5s ease-in-out transform;
    max-height: 100vh;
    overflow: auto;

    &.is-active {
      transform: translateX(100%);
      -webkit-transform: translateX(100%);
      max-height: none;
      overflow: initial;
    }

    html[dir="rtl"] &{
      right: initial;
      left: 100%;

      &.is-active {
        transform: translateX(-100%);
        -webkit-transform: translateX(-100%);
      }
    }

    .navbar-start, .navbar-end {
      & > .navbar-item {
        border-bottom: $navbar-dropdown-border-top;
        border-color: $primary;
      }
    }

    .navbar-link:not(.is-arrowless):after {
      border: 0;
    }
  }

  .navbar-dropdown {
    padding: 0;
  }

  .nested.has-dropdown {

    .navbar-link {
      padding-left: 1.5rem;
    }

    .navbar-dropdown {
      margin-left: 1.5rem;
      border-left: 1px solid $primary;
    }
  }
  .navbar > .container {
    padding: 0;
  }
}

@include from($navbar-breakpoint) {
  .navbar-start, .navbar-end {
    & > .navbar-item{
      min-height: $navbar-height;
    }
  }

  // Separated from next block to fix edge not displaying .navbar-dropdown on hover
  .navbar-item {
    &.is-hoverable:focus-within {
      .navbar-dropdown {
        display: none;
      }

      & > .navbar-dropdown {
        display: block;
      }
    }
  }

  .navbar-item {
    &.is-active,
    &.is-hoverable:focus,
    &.is-hoverable:hover {
      .navbar-dropdown {
        display: none;
      }

      & > .navbar-dropdown {
        display: block;
      }
    }
  }

  .navbar-dropdown {
    border-top-color: $navbar-dropdown-border-top-color;
    box-shadow: $navbar-dropdown-box-shadow;
    border-bottom: $navbar-dropdown-border-bottom;
    .navbar-item {
      color: $navbar-dropdown-item-color;
      & > .navbar-link{
        padding: 0.375rem 1rem;
      }
    }
  }
  .nested.has-dropdown {
    & > .navbar-link {
      &:not(.is-arrowless) {
        &:after {
          transform: rotate(-135deg);
        }
      }
    }

    .navbar-dropdown {
      top: -10px;
      margin-left: 100%;
      border-bottom-left-radius: 0;
      border-top-right-radius: 6px;
      box-shadow: 0 4px 10px rgba(10, 10, 10, 0.1);
      border-top: 0;
      border-left: 2px solid $primary;
      &.is-right{
        border-right: 2px solid $primary;
        border-left: 0;
        border-radius: 6px 0 0 6px;
        margin-right: 100%;
      }
    }
  }

  .navbar-item.has-dropdown-up{
    .nested{
      .navbar-dropdown{
        bottom: auto;
      }
    }
    .navbar-dropdown{
      border-bottom: 0;
    }
  }
}

.navbar-menu{
  .navbar-item, .navbar-link{
    &.is-active{
      text-decoration: $navbar-item-text-decoration-active;
    }
    &:hover{
      text-decoration: $navbar-item-text-decoration-hover;
    }
    &.has-dropdown{
      .navbar-item{
        &:hover{
          text-decoration: $navbar-dropdown-item-text-decoration-hover;
        }
        &.is-active{
          text-decoration: $navbar-dropdown-item-text-decoration-active;
        }
      }
    }
  }
}

@include from($navbar-breakpoint) {
  .navbar-start, .navbar-end {
    .navbar-item.nested{
      .navbar-link{
        &:hover{
          background-color: $navbar-dropdown-item-hover-background-color;
          color: $navbar-dropdown-item-hover-color;
        }
        background-color: transparent;
        color: unset;
        &.is-active{
          background-color: $navbar-dropdown-item-active-background-color;
          color: $navbar-dropdown-item-active-color;
        }
      }
    }
    & > .navbar-item.has-dropdown{
      .navbar-item.nested{
        &:focus,
        &:hover{
          & > .navbar-link:not(.is-active){
            background-color: $navbar-dropdown-item-hover-background-color;
            color: $navbar-dropdown-item-hover-color;
          }
        }
      }
    }
    .navbar-dropdown{
      a.navbar-item{
        &.is-active{
          background-color: $navbar-dropdown-item-active-background-color;
          color: $navbar-dropdown-item-active-color;
        }
      }
    }
  }

  @each $name, $pair in $navbar-colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    .navbar.is-#{$name} {
      .navbar-start, .navbar-end {
        & > a.navbar-item,
        .navbar-link {
          &.is-active {
            @if variable-exists(navbar-with-background-item-active-background-color) {
              background-color: $navbar-with-background-item-active-background-color;
            }
            @if variable-exists(navbar-with-background-item-active-color) {
              color: $navbar-with-background-item-active-color;
            }
          }
          &:focus,
          &:hover {
            @if variable-exists(navbar-with-background-item-hover-background-color) {
              background-color: $navbar-with-background-item-hover-background-color;
            }
            @if variable-exists(navbar-with-background-item-hover-color) {
              color: $navbar-with-background-item-hover-color;
            }
          }
          &:after{
            border-color: currentColor;
            @if variable-exists(navbar-with-background-dropdown-arrow) {
              border-color: $navbar-with-background-dropdown-arrow;
            }
          }
        }
        & > .navbar-item.has-dropdown:hover > .navbar-link {
          @if variable-exists(navbar-with-background-item-hover-background-color) {
            background-color: $navbar-with-background-item-hover-background-color;
          }
          @if variable-exists(navbar-with-background-item-hover-color) {
            color: $navbar-with-background-item-hover-color;
            text-decoration: $navbar-dropdown-item-text-decoration-hover;
          }
        }
        .navbar-item.nested{
          .navbar-link{
            &::after {
              border-color: currentColor;
            }
            &:hover{
              background-color: $navbar-dropdown-item-hover-background-color;
              color: $navbar-dropdown-item-hover-color;
            }
            background-color: transparent;
            color: unset;
            &.is-active{
              background-color: $color;
              color: $color-invert;
            }
          }
        }
      }
    }
  }
}
